THese are just notes I'm keeping through the process of building this 
project. 
Going to use these to make the README.md file about how to use this 
app and what it does
=====================================================================
Notes for the School web app:

To start i ran npm init

Added, jade, express, and jasmine to the dependencies of my package.json
file.

Ran npm install

Created folders /spec, and /views for jasmine and jade.

Starting with jasmine. npm finished installing dependencies

Jasmine is a unit testing framework for JavaScript. Its syntax encourages
behavior driven development and is similar to RSpec syntax.


===================================================================
#10/12
#Working on the jade template for the main page. It is not passing the
js files because it is only returning the index.jade file.

In order for express to send static files such as /css and /js files, 
you have to tell express to use them.

app.use('/js', express.static(__dirname + '/js'));
__dirname is the directory the file is in that is using it. Does not 
work in node equivelant irb.

This allows you to use /js/bootstrap.min.js in a script tag, and it will
know what you mean by /js.

Note: JADE NESTED TAGS
#When you are nesting tags, leave a space after the :

li: a(href="#")

or 
you can just use the indentations. But be careful, if the spaces are
wrong, or you mix spaces and tabs jade will miss some tags
===================================================================


#Working on the json files, so i can start building the assignments
found json validator web site
#http://jsonlint.com/

{
    "class": "IT_Security",
    "current_week": "3",
    "total_weeks": "12",
    "assignments": [
        {
            "name": "discussion",
            "notes": "#",
            "status": "",
            "permanent": "0"
        }
    ]
}

#Above was run in the jsonlint web app, so the syntax should be correct.


===================================================================

#Working on reading and parsing the json files in the /lib directory
#To get an array of files from within a directory use fs.readdir

#The directory path for each of the files will look like this

__dirname + '/lib/' + files[0]

#WHere files[0] is the array of returned files from fs.readdir function.
#NOTE: it is asynchronous (fs.readdir) so, you have to wait until it is
done to be able to use the array of file names.

#Using module 'jsonfile' to read and write JSON data to the files in
/lib

#Right now the index.js file will use readdir() to get all file names
from the /lib directory where all the json files will be kept.

#It loops through all of the files and populates a JS object called
'jsonObjects'. Once it is done pushing all of the objects from the 
files in the /lib dir.....it loops over the jsonObjects obj and prints
out the contents to the console.

#For each in jsonObjects; I cant populate the DOM from the server side
before the client issues a request. SO, I can make a JS function to 
output the assignment objects and pass them in to jade index.jade.

#I can do all of that on the server side before handling any client
requests.

#Have to figure out how to pass in the html to jade....or pass in an
object and have it render into html in the jade file...


====================================================================

Working on the assignment containers in the index.jade file. Im going
to hard code one so i know what I want it to look like...

I added the bxslider functionality and added in some configuration
parameters in the js/scripts.js file. It is easy enough to figure out
...but the code is difficult to understand. Maybe after I use it for
a while ill dig into the code to understand it better. For now im 
still understanding how it is working and how to get it to do what i
want.

So i hard coded some assignments into one of the classes and I have 
it looking as close to what i want as i can right now.

To stop the textarea from zooming while you type i had to increase the
font-size property to 20px;

Next, I have to take the jsonObjects that I created by opening all of
the json files in the /lib folder and organizing each object into an
array of slides that will populate the correct tab content area

====================================================================
Right now index.js [ the main server file ] will read all of the files
that are in the /lib folder. 

Each file will contain a json object for the associated class, which
will contain all of the assignment data for that class.

For each file index.js finds; 
it populates an array [jsonObjects] with the contents of each file.

Next, loop through all of the objects passing them into a function
This function will populate an array of html assignment objects that
will be passed into views/index.jade.

Now each object that is passed in represents one class, because each
file in the /lib directory is keeping track of one class. 

So for each jsonObj, find out what class it is, and for each assignment
create an array of html assignment containers to pass into jade

Variables: 
-Class -- =jsonObj['class'] Which class does the current jsonObj belong too. This is 
used for keeping each assignment in the right class

-Assignments -- =jsonObj['assignments'] Which is an array of objects
that represent one assignment each. These will be used to create
html assignments to pass into jade.
====================================================================
   for (var i = 0; i < assignments.length; i++){ 
..   var asign_name = assignments[i]['name'], 
..   notes = assignments[i]['notes']; 
..   var html_asign = "li(class='assignment_container')" + "\r\n" +  
..   " h3 " + asign_name + "\r\n" +  
..   " textarea(class='notes' id='assignment_notes' name='assignment_notes') " + notes; 
..   console.log("html_asign: " + i + " " + html_asign); };
 html_asign: 0 li(class='assignment_container')
 h3 Discussion
 textarea(class='notes' id='assignment_notes' name='assignment_notes') #
 html_asign: 1 li(class='assignment_container')
 h3 Exercise
 textarea(class='notes' id='assignment_notes' name='assignment_notes') #
====================================================================

Above is some code that i wrote in repl.it JS interpreter. This is how
I will make each of the html_assignment_objects that will populate 
the jade template.
====================================================================

NOTE: index.js file
Thinking that the for loop that gets all of the json objects, and the
for loop that populates the jadeContainer should each get their own
functions. Then I can just call functions in order before starting the
server.

THen from the app.get(){} function i can call run....which will run 
all of the necessary loops/functions...
====================================================================

I need some extra logic. I need one jadeContainer per class because
each class has its own content.

I have been working on the index.js file...the generate_html_asignmnts
method. it is passed each json object that is read from the files in
the /lib directory. This method takes the json object and gets the
assignments and stores them in an array. It then loops through each 
of the assignments and makes a piece of jade html template code adding
in the parts of the assignment that matter.

#I dont have to return the jadeContainer because it is a variable in 
the global scope and will be accessible to the rest of the program.

#Now jadeContainer will be an array of html jade template code. I need
to add the name of the class and make it an object like:
{ "IT_Security": [jadeContainer] }
#This is what i want to pass into the jade template so i can loop 
through the  jade container and put the template code in the right
content area. It will determine the content area based on the name.

#Made some changes...jadeContainer was renamed to 
jadeAssignmentContainer and a global variable jadeAssignments will be 
passed to the jade template.

===================================================================

#Working on passing the assignments into the jade template. ALso 
working on rendering them properly by looping through them in the 
jade template

#What if i make the assignment container a variable in the jade 
template. THen all i have to do is pass in the values....
name: asign_name 

#...make a function in jade that accepts 2 variables and will fill the
variables into the html variable before displaying the assignment
container.

#Look at this...
#http://www.mircozeiss.com/how-to-pass-javascript-variables-from-a-server-to-angular/

#Use angular and you will be able to do what i am trying to do easily 


====================================================================

#Was reading 'Express Web Application Development.pdf' figured out
how to display the html inline.

#Now i have to figure out why it is displaying 'discussion' twice, 
when it is only in the file as one assignment.....Still dont know why
it is making 2 discussion assignments when the jadeAssignemntContainer
.length = 1, and JadeAssignments.length = 1...even in the app.get()
jadeAssignments.length = 1, but 3 assignment containers are still 
being created....

####Have to figure out why I am passing in one assignment and jade
is rendering three....???????

====================================================================
#Also want to make a function to set the class1_title, class2_title,
from the json objects from the /lib dir.

#Having trouble keeping the assignments in the center of the view. They
all hang to the right...
CSS:
X	left: -20px; --Looks the same
Success!!	width: 430px !important
#This is a way to override inline styles. THe viewport was being set to
100% in the jquery.bxslider.js or whatever its called. I didnt want
to change code in there...in fear of changing something causing bad
things to happen....so i made it bigger by overriding the size of the 
viewport

#I also increased the line-height for the textareas so the letters 
were not sitting on eachother...

#Trying to make the address bar go away...
#Have not been able to get it to work
-Tried calling window.scrollTo(0,1); in setTimeout function in the 
$(document).ready function....didnt work
#Added meta tag <meta name="apple-mobile-web-app-capable" content="yes" />
didnt work...

====================================================================
MORE STYLE IDEAS: 
#Change the buttons....make them reach across the screen; bigger font;

#Change the tabs....bigger font;

#Make bigger 'next/prev' buttons/links;
====================================================================
NEXT TASK

#Have to work on how im going to work with the json data
how will it save changes made by the user?
how can the user edit the saved assignemnts?
have to wire up the other class tab
have to figure out the logic for the 'permanent' attribute of asignmnts


#Come up with how all that will work and figure it out...
====================================================================
User creates a new assignment:
-Press the [+] button to add a new assignment

#Going to try and use Bootstrap.js Modals as a pop up to gather 
required data from user....which consists of 'Name' and any initial
'Notes' about the assignment that can be optionally blank.

#The modal HTML code has to be in the main index.jade file.
#Right now the modal is showing initially....it should be hidden...
#The modal is hard to get positioned correctly on the phone...

#Got the modal in the right position.
#Have to change it to collect the data that i need from user...
#It still appears when the page is initially loaded...want it hidden
until user presses the [+] button


#Changing the look of the modal to accept user input, the assignment
name and any initial notes.

#To get the values of the user supplied input???
-Try getting the values when the button is pressed...
-The 'id' for the assignment name => assignment_name
-The 'id' for initial notes => initial_notes
-The Add Assignments button 'id' => btn_add_assignment
-The Close button 'id' => btn_close

...add the [+] button.on('click', onAddAssignmentClick);
============================================================
#For adding an assignment...Im using a form that is submitted to a 
route via app.post()

#It uses body-parser to get the values of the fields that were 
submitted by the user and prints them to the console.

#When i get the data i need to open up the json file in the /lib
directory and add the new assignment. This way when I res.redirect
It will automatically load the page with the new assignment already
saved in the correct file...
#May also be able to use res.render(.jade, {}) it will pretty much do 
the same thing i think...

#Need to make some changes....Have to delete all of the asingmnts
that are hard coded in the file....make sure i can save the file with
new data/new assignments....Move all the JSON file activity to its 
own module so it is not filling up the app file....change the name
of index.js to app.js [its a convention in express]....
==============================================================

#Working on adding a new assignment.
#It is passing the variables in a POST to /newAssignment
#I need to add the asign_name and notes to the assignments
{"name": asign_name,"notes": notes,"status":"","permanent":"0"}

#In the app.post() route...asignmnts.push(asign_obj) pushes the newly
added assignment object onto the assignment array. Now I have to save
it....

#Next; have to add the save_new_assignment() function
#Arguments: (new_assignments, JSON object )
#file_name = JSON object['class'] + '.json';
#JSON object = jsonObjects[0] or [1]
#Open the file for writing
#Set the assignments to the new_assignments
#Save the file
#restart the application

=============================================================

#Need to add the other class/tab to the mix...
#Had to fix the index.jade view...

#It seems to be parsing both files in the /lib directory and 
displaying them in the proper content area nicely

#When i click "written analysis' tab i have to click the [next] for
the content to show....will have to fix later. But, it does show the 
content correctly after you press [next]

===================================================================

Working on adding new assignment to the current class
In app.post() i set a bunch of variables to the user input 

Try looping through the #{jsonObjects} and trying to check if the 
jsonObject['class'] == active_tab

They are equal in the output/console
But it does not enter the if statement....

Used typeof on both....they are both strings.
Tried .indexOf() but always returns -1
tried ==, ===
!!!Had to use the .trim() method. There must have been white space 
making them not equal

================================================================

I am having trouble with adding new assignments and reloading the 
page so the new assignments shows up

The new assignments will only show up after i restart node server

I think im going to leave it for now and just add assignments to the
file directly until i figure it out.

Also i did not check to see if it works on the second tab. There are
issues with the second tab [the assignments dont show up until you 
press [next]/[previous] buttons; one or the other..check it

=================================================================

Whats next?

-function save_assignments(){}
THis function is for when the user changes some data in the notes 
areas and presses the [save] button to persist the changes

I have to know what is the active tab so i know what jsonObjects[x]
to save it too...

>file path?
>can i know the current slide?
	-there is a method getCurrentSlide() in bxslider...
	-var slider = $(".bx-wrapper")
	X!!Doesnt seem to be available..maybe depreciated.
>can i just make a JSON object to pass to the save funtion?
	-var json_obj_template = {
  "class": "IT Security",
  "current_week": "3",
  "total_weeks": "12",
  "assignments": []
}
	-var assign_obj_template = {
      "name": "<Name of Assignment>",
      "notes": "<Notes>",
      "status": "", //Default is empty string
      "permanent": "0" //default is "0" = false or "1" = true
    }
	-THis would be easy. In the save function i can just call 
js.writeFileSync(); I need the file path, then the JSON object. I need
 to collect the data from the slides
		-I can have an object template. store all of the info
i need in the object and then i can use ajax?
>Im going to need the data that changed
>reference to the jsonObjects

#In /js/scripts.js i have to add a .click listener to the [save]
button.
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
Revision: Having difficulties with the current version; making some
changes to fix some of the issues i have identified. 

#Make a jade template instead of making html with javascript and 
passing the html to jade. Instead pass just the data it needs to
the assignment template. Then for each template 'include' it in
the right content area. This will remove generate_html_assignments(jObj)
function. I wont need it any more.

#Also need to move [ loading the files from /lib and populating
jsonObjects] to its own function and call it when app.get(/) is 
called. This should allow changes to be reflected without having
to restart the server. 

Assignment HTML code: for making jade template
" <textarea class='notes' id='assignment_notes' name='assignment_notes'>" + notes + "</textarea></li>"

{Im trying to get rid of the html_generate function; also because 
making HTML with javascript code is bad practice.} >
>This is done, moved the html_generate function to a jade template.
Right now it does not find the views/class2_assignment.jade template; and does not 
show the second class right now....

===================================================================

#####Working on adding a new assignment to make sure it works right...

I added the load_lib_files(); function to look at the files in the /lib directory
Now when the app.get(/) route is called it will check if the jsonObjects.length is > 0
if it is then it will set jsonObjects[] and jadeAssignments[] === []; and call 
load_lib_files() function to re-populate the jade template.

The first run seems to work fine for IT_Security, when i add a new assignment to Written_Analysis
it did not save...

Had to fix the name= and id= in the modal for the add assignment button.

Now it works on both tabs as expected.

===================================================================
===================================================================

#####################Working on the [save] button....
when the user changes or add notes to an existing assignment
the user presses the [save] button
-app.post('/saveAssignment') will be called.
-gather the current_active_tab
-find the right jsonObjects[i]
-var assignments = [{},{}] //Current assignments
-jsonObjects[]['assignments'] = assignments.
-write it to /lib/current_active_tab

#Had to use socket.io web sockets to send the assignment data to the server
!#AJAX....for whatever reason I could not get to work right. The web sockets were much
easier to use.
---------------------------------------------
##This is the data that is sent to the server and received by the socket
socket.io saveAssignment event; JSON.parse(data) = discussion#,Forum##,Project part 1started part 1...
socket.io saveAssignment event; data = ["discussion#","Forum##","Project part 1started part 1..."]

#The name of the assignment and the notes are forced into one string for each assignment object.
#In order to separate them I have to include a '#' as the first character of each of the notes.

#When the server receives the data in the 'saveAssignment' event...I want to save each assignment and 
notes to the correct file in /lib directory
    -

#!!Found another problem...When i click [save] after changing the text in the notes it does not show up
in the server console....check the .on(click) in the scripts.js to make sure it parses out the text 
each time
#I dont know why.....
#Figured it out...have to use .val or .value to get the text from a textarea.
#I changed the #save_assignment.click function so that it only saves the values from the 
#non bx-clone slides. Also, it only saves the value of the text in the textarea.


#Now i have the updated text from the user...I have to send it to the server via the socket.io
#It goes to the server as expected
#I still need the current 'active' tab so I know where to put the data...

#Now on the server...
#I have to take the values of the textareas and update the /lib/<file>

!!!!!!!!!!!!!#Need to make a method that will accept a jsonobj and write that to the correct file.


##########################
#The [save] button works as expected for both tabs/classes..

===================================================================

#######################Working on [new week] button



===================================================================
Dynamically assign classes/tabs

-How to do it?
    -im going to need a jade template to hold the HTML code for a tab
    -
    
-I have set variables tab1_name and tab2_name to the 'class' names of the json objects
that are saved in the /lib. I can send them to jade so that i can dynamically add them to the
tab template to add the names of the classes from the json objects in the /lib file.

-Jade template --Below is the HTML that I am currently using....use it for the template.
ul(role="tablist" class="nav nav-tabs" data-tabs="tabs")
 li(class="active"): a(href="#class1" data-toggle="tab") #{class1_title} 
 li: a(href="#class2" data-toggle="tab") #{class2_title}
 
 #Put the ul() in the index.jade template so I know where to put each li
 #The template can be just 
 
 li: a(href="#class1" data-toggle="tabs")
 
 #One has to be li(class="active")...but only one, the first one.
 #I could just use javascript to ass class=active to the first ul li a .??

================================================================
What else do i still need to do...

Make the 'permanent' attribute do something [ change the color of the assignment box, do not delete when
[new week] is pressed, ]

Wire up the [new week] button

Dynamically assign class/tabs based on the /lib files ['class'] value...


#On my Droid razr maxx the web app is too big for the screen, but on bionic
i can zoom out to fit the whole app on the screen...???

